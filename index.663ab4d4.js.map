{"mappings":"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","sources":["src/sketch.js"],"sourcesContent":["var camera, scene, renderer\r\n\r\nvar model, env_texture;\r\n\r\nvar plane = [null, null, null, null, null, null]\r\n\r\nvar texture2;\r\n\r\nvar manager;\r\n\r\nvar loading_icon = document.getElementsByClassName(\"loading-container\")[0]\r\n\r\nwait()\r\n\r\nfunction wait() {\r\n    if (typeof THREE === \"undefined\") { requestAnimationFrame(wait) } else { load_models() }\r\n}\r\n\r\nfunction load_models() {\r\n    loader = new GLTFLoader()\r\n    console.log(\"start\")\r\n    manager = new THREE.LoadingManager();\r\n    manager.onStart = function (url, itemsLoaded, itemsTotal) {\r\n        incrementProgress()\r\n    };\r\n\r\n    manager.onLoad = function () {\r\n        console.log('Loading complete!');\r\n    };\r\n\r\n    manager.onProgress = function (url, itemsLoaded, itemsTotal) {\r\n        //console.log('Loaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\r\n        incrementProgress()\r\n    };\r\n\r\n    manager.onError = function (url) {\r\n        console.log('There was an error loading ' + url);\r\n    };\r\n    texture2 = new THREE.TextureLoader(manager).load(\"./env.jpg\")\r\n    texture2.mapping = THREE.EquirectangularReflectionMapping\r\n    for (var i = 0; i < 6; i++) {\r\n        const geometry = new THREE.PlaneGeometry(1, 0.7);\r\n        var texture = new THREE.TextureLoader(manager).load(`./texture${i + 1}.png`);\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.x = - 1\r\n        texture.generateMipmaps = false;\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.receiveShadow = false\r\n        const material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.DoubleSide });\r\n        material.receiveShadow = false\r\n        plane[i] = new THREE.Mesh(geometry, material);\r\n        plane[i].scale.z = -1\r\n    }\r\n    new THREE.ObjectLoader(manager).load(\"./scene_port.json\", function (glb) {\r\n        model = glb\r\n        model.traverse(function (obj) {\r\n            if (obj.isMesh) {\r\n                obj.material.receiveShadow = true\r\n                obj.material.castShadow = true\r\n            }\r\n\r\n        })\r\n\r\n        setTimeout(() => {\r\n            loading_icon.style.display = \"none\"\r\n            start()\r\n        }, 1000);\r\n\r\n    })\r\n    /*while (!loaded) {\r\n        if (current_value !== prev_value) {\r\n            prev_value = current_value\r\n            incrementProgress()\r\n        }\r\n    }*/\r\n}\r\n\r\n\r\nfunction start() {\r\n    scene = new THREE.Scene()\r\n\r\n    scene.background = texture2\r\n    scene.environment = texture2\r\n    scene.fog = new THREE.Fog(0x000004, 0.5, 7)\r\n\r\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.updateProjectionMatrix()\r\n\r\n    camera.position.set(-3, 2, 0)\r\n\r\n    renderer = new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        alpha: true,\r\n        powerPreference: \"high-performance\",\r\n        stencil: false,\r\n    });\r\n\r\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n    renderer.toneMappingExposure = 0.6;\r\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true\r\n    controls.enablePan = false\r\n    controls.enableZoom = false\r\n    controls.minAzimuthAngle = -Math.PI / 2\r\n    controls.maxAzimuthAngle = Math.PI / 2\r\n    controls.rotateSpeed = 0.1\r\n\r\n    controls.minPolarAngle = Math.PI / 2;\r\n    controls.maxPolarAngle = Math.PI / 2;\r\n\r\n    controls.target = new THREE.Vector3(0, 2, 0)\r\n\r\n    window.addEventListener('resize', function () {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n    });\r\n\r\n    ambientLight = new THREE.AmbientLight(0xffffff, 5);\r\n    scene.add(ambientLight);\r\n\r\n    model.children[1].decay = 0.2\r\n\r\n    scene.add(model)\r\n\r\n    for (var i = 0; i < 6; i++) {\r\n        scene.add(plane[i]);\r\n    }\r\n\r\n    update()\r\n}\r\n\r\n\r\nfunction update() {\r\n    controls.update()\r\n    camera.lookAt(new THREE.Vector3(0, 1, 0))\r\n    for (var i = 0; i < 6; i++) {\r\n        plane[i].position.x = Math.cos(controls.getAzimuthalAngle() - (Math.PI / 2) + (i) * -Math.PI / 2.5) * 1.5\r\n        plane[i].position.z = Math.sin(controls.getAzimuthalAngle() - (Math.PI / 2) + (i) * -Math.PI / 2.5) * 1.5\r\n        plane[i].position.y = controls.getAzimuthalAngle() + Math.PI - (i) * 0.65 + 0.2\r\n        plane[i].lookAt(new THREE.Vector3(0, plane[i].position.y, 0))\r\n    }\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(update)\r\n}\r\n\r\nfunction incrementProgress() {\r\n    const progressBar = document.getElementById(\"progress\");\r\n    const progressText = document.getElementById(\"progressText\");\r\n\r\n    // Get the current progress\r\n    let currentProgress = parseFloat(progressBar.style.width) || 0;\r\n\r\n    // Increment the progress by one division\r\n    currentProgress += 1.69491525424;\r\n\r\n    // Update the progress bar width\r\n    progressBar.style.width = `${currentProgress}%`;\r\n\r\n    // Update the progress text\r\n    progressText.textContent = `Progress: ${currentProgress.toFixed(1)}%`;\r\n}\r\n\r\ndocument.getElementsByClassName(\"email-icon-container\")[0].addEventListener(\"click\", () => {\r\n    copyToClipboard()\r\n})\r\n\r\nfunction copyToClipboard() {\r\n    const email = \"megamatteo27@gmail.com\"; // Replace with your actual email address\r\n\r\n    // Create a temporary input element\r\n    const input = document.createElement(\"input\");\r\n    input.value = email;\r\n    document.body.appendChild(input);\r\n\r\n    // Select the text in the input element\r\n    input.select();\r\n    document.execCommand(\"copy\");\r\n\r\n    // Remove the temporary input element\r\n    document.body.removeChild(input);\r\n\r\n    // Provide acknowledgment to the user\r\n    alert(\"Email copied to clipboard!\");\r\n}"],"names":[],"version":3,"file":"index.663ab4d4.js.map","sourceRoot":"/__parcel_source_root/"}